from core.find_2point_attractor_network import find_two_point_attractor
import pytest


@pytest.fixture
def sample_boolean_network():
    return [[[0, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]], [[1, 0, 0, 0], [1, 0, 1, 1], [1, 1, 1, 0], [1, 0, 0, 0]],
            [[0, 1, 0, 0], [0, 0, 1, 1], [1, 0, 1, 1], [1, 1, 1, 0], [1, 0, 0, 0], [1, 0, 1, 1]],
            [[1, 1, 0, 0], [0, 0, 0, 0], [1, 1, 0, 0]], [[0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]],
            [[1, 0, 1, 0], [1, 0, 1, 0]], [[0, 1, 1, 0], [1, 0, 1, 0], [1, 0, 1, 0]],
            [[1, 1, 1, 0], [1, 0, 0, 0], [1, 0, 1, 1], [1, 1, 1, 0]], [[0, 0, 0, 1], [1, 0, 0, 0], [1, 0, 1, 1], [1, 1, 1, 0],
            [1, 0, 0, 0]],
            [[1, 0, 0, 1], [1, 1, 1, 1], [0, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]],
            [[0, 1, 0, 1], [0, 0, 1, 1], [1, 0, 1, 1], [1, 1, 1, 0], [1, 0, 0, 0], [1, 0, 1, 1]],
            [[1, 1, 0, 1], [0, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]],
            [[0, 0, 1, 1], [1, 0, 1, 1], [1, 1, 1, 0], [1, 0, 0, 0], [1, 0, 1, 1]], [[1, 0, 1, 1], [1, 1, 1, 0], [1, 0, 0, 0],
            [1, 0, 1, 1]],
            [[0, 1, 1, 1], [0, 0, 1, 0], [1, 1, 1, 1], [0, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]],
            [[1, 1, 1, 1], [0, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]]]


def test_can_check_correctly_find_2point_attractor_network(sample_boolean_network):
    node_number = 4
    average_degree_k = 3
    expected_result_two_or_not, expected_result_id_state_combi = False, {(0, 0, 0, 0): 1, (1, 0, 0, 0): 2,
                                                                         (0, 1, 0, 0): 2,
                                                                         (1, 1, 0, 0): 1, (0, 0, 1, 0): 1,
                                                                         (1, 0, 1, 0): 3,
                                                                         (0, 1, 1, 0): 3, (1, 1, 1, 0): 2,
                                                                         (0, 0, 0, 1): 2,
                                                                         (1, 0, 0, 1): 1, (0, 1, 0, 1): 2,
                                                                         (1, 1, 0, 1): 1,
                                                                         (0, 0, 1, 1): 2, (1, 0, 1, 1): 2,
                                                                         (0, 1, 1, 1): 1,
                                                                         (1, 1, 1, 1): 1}
    result_two_or_not, result_id_state_combi = find_two_point_attractor(sample_boolean_network)

    assert result_two_or_not == expected_result_two_or_not
    assert result_id_state_combi == expected_result_id_state_combi
